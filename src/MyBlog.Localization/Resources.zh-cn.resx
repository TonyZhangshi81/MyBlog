<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Author" xml:space="preserve">
    <value>作者</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>評論</value>
  </data>
  <data name="Content" xml:space="preserve">
    <value>內容</value>
  </data>
  <data name="CreatedOn" xml:space="preserve">
    <value>創建時間</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-Mail</value>
  </data>
  <data name="Header" xml:space="preserve">
    <value>標題</value>
  </data>
  <data name="Homepage" xml:space="preserve">
    <value>主頁</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="IdentityErrorDefaultError" xml:space="preserve">
    <value>Identity 定義錯誤</value>
  </data>
  <data name="IdentityErrorDuplicateEmail" xml:space="preserve">
    <value>E-Mail "{0}" 已經被使用。</value>
  </data>
  <data name="IdentityErrorDuplicateRoleName" xml:space="preserve">
    <value>角色 '{0}' 已經被使用了。</value>
  </data>
  <data name="IdentityErrorDuplicateUserName" xml:space="preserve">
    <value>用戶名 "{0}" 已經被使用。</value>
  </data>
  <data name="IdentityErrorInvalidEmail" xml:space="preserve">
    <value>無效的 E-Mail "{0}" </value>
  </data>
  <data name="IdentityErrorInvalidRoleName" xml:space="preserve">
    <value>角色 '{0}' 定義無效。</value>
  </data>
  <data name="IdentityErrorInvalidToken" xml:space="preserve">
    <value>錯誤的口令。</value>
  </data>
  <data name="IdentityErrorInvalidUserName" xml:space="preserve">
    <value>用戶名 "{0}" 無效. 只能包含英文和數字。</value>
  </data>
  <data name="IdentityErrorLoginAlreadyAssociated" xml:space="preserve">
    <value>用戶名已經被使用。</value>
  </data>
  <data name="IdentityErrorPasswordMismatch" xml:space="preserve">
    <value>密碼無效。</value>
  </data>
  <data name="IdentityErrorPasswordRequiresDigit" xml:space="preserve">
    <value>密碼至少含有一個 ("0" - "9") 數字。</value>
  </data>
  <data name="IdentityErrorPasswordRequiresLower" xml:space="preserve">
    <value>密碼至少含有一個大寫英文 ("A" ~ "Z") 字母。</value>
  </data>
  <data name="IdentityErrorPasswordRequiresNonAlphanumeric" xml:space="preserve">
    <value>密碼至少含有一個不是數字或字母的字符。</value>
  </data>
  <data name="IdentityErrorPasswordRequiresUpper" xml:space="preserve">
    <value>密碼至少含有一個小寫英文 ("a" ~ "z") 字母。</value>
  </data>
  <data name="IdentityErrorPasswordTooShort" xml:space="preserve">
    <value>密碼的長度至少是 {0} 位.</value>
  </data>
  <data name="IdentityErrorUserAlreadyHasPassword" xml:space="preserve">
    <value>用戶已經設置了密碼.</value>
  </data>
  <data name="IdentityErrorUserAlreadyInRole" xml:space="preserve">
    <value>使用者已經是 "{0}" 角色的一員.</value>
  </data>
  <data name="IdentityErrorUserLockoutNotEnabled" xml:space="preserve">
    <value>用戶鎖定無法啟用.</value>
  </data>
  <data name="IdentityErrorUserNotInRole" xml:space="preserve">
    <value>用戶不在 "{0}" 角色定義中.</value>
  </data>
  <data name="PublishDate" xml:space="preserve">
    <value>發佈時間</value>
  </data>
  <data name="ShortContent" xml:space="preserve">
    <value>內容集中（顯示在主頁上）</value>
  </data>
  <data name="Validation_MaxLength" xml:space="preserve">
    <value>"{0}" 的最大長度是 {1} .</value>
  </data>
  <data name="Validation_MaxMinLength" xml:space="preserve">
    <value>"{0}" 的最大長度是 {2} 、最小長度是 {1} .</value>
  </data>
  <data name="Validation_Required" xml:space="preserve">
    <value>"{0}" 是必須輸入的.</value>
  </data>
  <data name="Visible" xml:space="preserve">
    <value>公開可見</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>名字</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>姓</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>名</value>
  </data>
  <data name="Visits" xml:space="preserve">
    <value>訪客</value>
  </data>
  <data name="Counter" xml:space="preserve">
    <value>關注</value>
  </data>
  <data name="UpdateDate" xml:space="preserve">
    <value>更新時間</value>
  </data>
  <data name="SavedSuccessfully" xml:space="preserve">
    <value>保存成功</value>
  </data>
  <data name="DeletedSuccessfully" xml:space="preserve">
    <value>刪除成功</value>
  </data>
  <data name="PermalinkInUse" xml:space="preserve">
    <value>連接 '{0}' 已經可以使用了</value>
  </data>
</root>